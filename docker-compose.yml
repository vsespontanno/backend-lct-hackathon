version: "3.9"

services:
  db:
    image: postgres:15
    container_name: postgres_hackathon
    restart: always
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME} -d ${DB_NAME}"]
      interval: 5s
      retries: 10

  migrate:
    image: migrate/migrate
    container_name: migrate_hackathon
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://${DB_USERNAME}:${DB_PASSWORD}@db:5432/${DB_NAME}?sslmode=disable",
      "up"
    ]
    env_file:
      - .env

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_hackathon
    depends_on:
      - migrate
    env_file:
      - .env
    ports:
      - "8080:8080"

  seed:
    build:
      context: .
      dockerfile: Dockerfile.seed
    container_name: seed_hackathon
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    restart: "no" # сидер отработал и завершился

volumes:
  pgdata: